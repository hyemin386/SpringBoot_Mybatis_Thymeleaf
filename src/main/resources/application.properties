##Server Port 설정
server.port=80

##DataSource 설정
### oracle
#spring.datasource.hikari.username=user01
#spring.datasource.hikari.password=user01
#spring.datasource.url=jdbc:oracle:thin:@127.0.0.1:1521:xe
#spring.datasource.hikari.driver-class-name=oracle.jdbc.driver.OracleDriver

### maria
spring.datasource.hikari.username=user01
spring.datasource.hikari.password=user01
spring.datasource.url=jdbc:mariadb://127.0.0.1:3305/user01
spring.datasource.hikari.driver-class-name=org.mariadb.jdbc.Driver

##MyBatis 설정
mybatis.mapper-locations=classpath:/database/**/*Mapper.xml
mybatis.config-location=classpath:/database/config/config.xml

##fileUpload
##1. form의 method 형식 post, enctype=miltipart/form-data
##2. API는 내장, 따로 pom.xml에 추가하지 않음
##3. MutipartResolver
## multipart 사용 여부
spring.servlet.multipart.enabled=true
## 파일당 최대 크기 설정
spring.servlet.multipart.max-file-size=10MB
## 총 파일 최대 크기 설정
spring.servlet.multipart.max-request-size=50MB
## 파일을 저장할 파일 시스템의 경로
#spring.servlet.multipart.location="c:/upload"

##service class가 부모 인터페이스 없이 단독 사용할 때 에러 발생하게 됨
## 그 에러를 방지하기 위한 용도로 작성하여 사용
spring.aop.proxy-target-class=true

##파일의 저장경로 설정
board.notice.filePath=upload/notice/
board.qna.filePath=upload/qna/
member.filePath=upload/member/

##Message 설정
## message 폴더 하위에 message로 시작하는 모든 파일
spring.messages.basename=message/message
spring.messages.encoding=UTF-8
## message가 없는 코드일 경우 예외 발생
## true: 예외를 발생시키지 않고 코드 자체를 출력
## false: 예외 발생
spring.messages.use-code-as-default-message=true
## properties 파일의 변경을 감지할 시간 간격을 지정(초단위)
spring.messages.cache-duration=60
